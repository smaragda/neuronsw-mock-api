# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.inline_response2006_prediction import InlineResponse2006Prediction
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Recording(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, binary: str=None, id: int=None, name: str=None, prediction: InlineResponse2006Prediction=None):
        """
        Recording - a model defined in Swagger

        :param binary: The binary of this Recording.
        :type binary: str
        :param id: The id of this Recording.
        :type id: int
        :param name: The name of this Recording.
        :type name: str
        :param prediction: The prediction of this Recording.
        :type prediction: InlineResponse2006Prediction
        """
        self.swagger_types = {
            'binary': str,
            'id': int,
            'name': str,
            'prediction': InlineResponse2006Prediction
        }

        self.attribute_map = {
            'binary': 'binary',
            'id': 'id',
            'name': 'name',
            'prediction': 'prediction'
        }

        self._binary = binary
        self._id = id
        self._name = name
        self._prediction = prediction

    @classmethod
    def from_dict(cls, dikt) -> 'Recording':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Recording of this Recording.
        :rtype: Recording
        """
        return deserialize_model(dikt, cls)

    @property
    def binary(self) -> str:
        """
        Gets the binary of this Recording.

        :return: The binary of this Recording.
        :rtype: str
        """
        return self._binary

    @binary.setter
    def binary(self, binary: str):
        """
        Sets the binary of this Recording.

        :param binary: The binary of this Recording.
        :type binary: str
        """

        self._binary = binary

    @property
    def id(self) -> int:
        """
        Gets the id of this Recording.

        :return: The id of this Recording.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this Recording.

        :param id: The id of this Recording.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """
        Gets the name of this Recording.

        :return: The name of this Recording.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this Recording.

        :param name: The name of this Recording.
        :type name: str
        """

        self._name = name

    @property
    def prediction(self) -> InlineResponse2006Prediction:
        """
        Gets the prediction of this Recording.

        :return: The prediction of this Recording.
        :rtype: InlineResponse2006Prediction
        """
        return self._prediction

    @prediction.setter
    def prediction(self, prediction: InlineResponse2006Prediction):
        """
        Sets the prediction of this Recording.

        :param prediction: The prediction of this Recording.
        :type prediction: InlineResponse2006Prediction
        """

        self._prediction = prediction

